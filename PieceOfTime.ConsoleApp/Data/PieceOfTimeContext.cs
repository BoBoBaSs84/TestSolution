// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Configuration;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using PieceOfTime.SqlContext.Models;

#nullable disable

namespace PieceOfTime.SqlContext.Data
{
    public partial class PieceOfTimeContext : DbContext
    {
        public PieceOfTimeContext()
        {
        }

        public PieceOfTimeContext(DbContextOptions<PieceOfTimeContext> options)
            : base(options)
        {
        }

        public virtual DbSet<CCalendarTable> CalendarTable { get; set; }
        public virtual DbSet<CDayTypes> DayTypes { get; set; }
        public virtual DbSet<CEmployeeAvailableVacation> EmployeeAvailableVacation { get; set; }
        public virtual DbSet<CEmployeeWeeklyWorkingHours> EmployeeWeeklyWorkingHours { get; set; }
        public virtual DbSet<CGetEmployeInfo> GetEmployeInfo { get; set; }
        public virtual DbSet<CPresenceAbsence> PresenceAbsence { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
                optionsBuilder.UseSqlServer(ConfigurationManager.ConnectionStrings["PieceOfTime"].ConnectionString);
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<CCalendarTable>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("CalendarTable", "app");

                entity.Property(e => e.Date).HasColumnType("date");

                entity.Property(e => e.DayName).HasMaxLength(30);

                entity.Property(e => e.Factor).HasColumnType("decimal(2, 1)");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.IsoWeek).HasColumnName("ISO_Week");

                entity.Property(e => e.MonthName).HasMaxLength(30);
            });

            modelBuilder.Entity<CDayTypes>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("DayTypes", "app");

                entity.Property(e => e.DayType)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<CEmployeeAvailableVacation>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("EmployeeAvailableVacation", "app");

                entity.Property(e => e.DateFrom).HasColumnType("date");

                entity.Property(e => e.DateTill).HasColumnType("date");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<CEmployeeWeeklyWorkingHours>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("EmployeeWeeklyWorkingHours", "app");

                entity.Property(e => e.DateFrom).HasColumnType("date");

                entity.Property(e => e.DateTill).HasColumnType("date");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<CGetEmployeInfo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("GetEmployeInfo", "app");

                entity.Property(e => e.Gid)
                    .HasMaxLength(8)
                    .HasColumnName("GID");

                entity.Property(e => e.Mail)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NameShortPhone).HasMaxLength(100);

                entity.Property(e => e.Organisation).HasMaxLength(200);

                entity.Property(e => e.PeopleName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PeopleSurname)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Scdcompany)
                    .HasMaxLength(50)
                    .HasColumnName("SCDCompany");

                entity.Property(e => e.Telephone).HasMaxLength(30);
            });

            modelBuilder.Entity<CPresenceAbsence>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("PresenceAbsence", "app");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}